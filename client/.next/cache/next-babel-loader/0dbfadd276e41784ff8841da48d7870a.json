{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Get_Add, GET_ITEMS, Post_Plan, Post_Add, Get_Food } from \"../Actions/Types\";\nvar initialState = {\n  items: [],\n  auth: false,\n  PlanType: \"\",\n  Address: {}\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type);\n  console.log(action.payload);\n\n  switch (action.type) {\n    case \"GET_ITEMS\":\n      // console.log(action.payload._id);\n      //localStorage.setItem(\"item\", action.payload.item.items._id);\n      return _objectSpread({}, state, {\n        items: action.payload\n      });\n\n    case Get_Food:\n      // console.log(action.payload._id);\n      //localStorage.setItem(\"item\", action.payload.item.items._id);\n      return _objectSpread({}, state, {\n        items: action.payload\n      });\n\n    case Post_Plan:\n      return _objectSpread({}, state, {\n        PlanType: action.payload\n      });\n\n    case Post_Add:\n      return _objectSpread({}, state, {\n        Address: _objectSpread({}, state.Address, {}, action.payload)\n      });\n\n    case Get_Add:\n      return _objectSpread({}, state, {\n        Address: _objectSpread({}, state.Address, {}, action.payload)\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}