{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\nextjs-blog\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport \"../styles/global.css\";\nimport \"../styles/home.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faEnvelope, faKey } from \"@fortawesome/free-solid-svg-icons\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\nlibrary.add(faEnvelope, faKey);\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return __jsx(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx;\n\n              if (!Component.getInitialProps) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 4:\n              _context.t0 = _context.sent;\n              _context.next = 8;\n              break;\n\n            case 7:\n              _context.t0 = {};\n\n            case 8:\n              pageProps = _context.t0;\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App); //makeStore function that returns a new store for every request\n\n\nvar makeStore = function makeStore() {\n  return store;\n}; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["C:/Users/Acer/Desktop/nextjs-blog/pages/_app.js"],"names":["React","library","faEnvelope","faKey","Provider","store","add","MyApp","props","Component","pageProps","ctx","getInitialProps","App","makeStore","withRedux"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,mCAAlC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACAJ,OAAO,CAACK,GAAR,CAAYJ,UAAZ,EAAwBC,KAAxB;;IAEMI,K;;;;;;;;;;;;;6BASK;AACL;AADK,wBAEiC,KAAKC,KAFtC;AAAA,UAEEC,SAFF,eAEEA,SAFF;AAAA,UAEaC,SAFb,eAEaA,SAFb;AAAA,UAEwBL,KAFxB,eAEwBA,KAFxB;AAIL,aACI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ;AAKH;;;;;;;;;AAhB6BD,cAAAA,S,QAAAA,S,EAAWE,G,QAAAA,G;;mBACnBF,SAAS,CAACG,e;;;;;;+CAAwBH,SAAS,CAACG,eAAV,CAA0BD,GAA1B,C;;;;;;;;4BAAiC,E;;;AAA/ED,cAAAA,S;+CAGC;AAACA,gBAAAA,SAAS,EAAEA;AAAZ,e;;;;;;;;;;;;EANOG,G,GAqBpB;;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMT,KAAN;AAAA,CAAlB,C,CAEA;;;AACA,eAAeU,SAAS,CAACD,SAAD,CAAT,CAAqBP,KAArB,CAAf","sourcesContent":["import React from \"react\";\r\nimport \"../styles/global.css\";\r\nimport \"../styles/home.css\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faEnvelope, faKey } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../store\";\r\nlibrary.add(faEnvelope, faKey);\r\n\r\nclass MyApp extends App {\r\n\r\n  static async getInitialProps({Component, ctx}) {\r\n      const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n      //Anything returned here can be accessed by the client\r\n      return {pageProps: pageProps};\r\n  }\r\n\r\n  render() {\r\n      //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\r\n      const {Component, pageProps, store} = this.props;\r\n\r\n      return (\r\n          <Provider store={store}>\r\n              <Component {...pageProps}/>\r\n          </Provider>\r\n      );\r\n  }\r\n}\r\n\r\n//makeStore function that returns a new store for every request\r\nconst makeStore = () => store;\r\n\r\n//withRedux wrapper that passes the store to the App Component\r\nexport default withRedux(makeStore)(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}