{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Get_Add, GET_ITEMS, Post_Plan, Post_Add, Get_Food } from \"../Actions/Types\";\nconst initialState = {\n  items: [],\n  auth: false,\n  PlanType: \"\",\n  Address: {} // order:{\n  // }\n\n};\nexport default function (state = initialState, action) {\n  console.log(action.type);\n  console.log(action.payload);\n\n  switch (action.type) {\n    case \"GET_ITEMS\":\n      // console.log(action.payload._id);\n      //localStorage.setItem(\"item\", action.payload.item.items._id);\n      return _objectSpread({}, state, {\n        items: action.payload\n      });\n\n    case Get_Food:\n      // console.log(action.payload._id);\n      //localStorage.setItem(\"item\", action.payload.item.items._id);\n      return _objectSpread({}, state, {\n        items: action.payload\n      });\n\n    case Post_Plan:\n      return _objectSpread({}, state, {\n        PlanType: action.payload\n      });\n\n    case Post_Add:\n      return _objectSpread({}, state, {\n        Address: _objectSpread({}, state.Address, {}, action.payload)\n      });\n\n    case Get_Add:\n      return _objectSpread({}, state, {\n        Address: _objectSpread({}, state.Address, {}, action.payload)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/nextjs-blog/client/reducers/itemReducer.js"],"names":["Get_Add","GET_ITEMS","Post_Plan","Post_Add","Get_Food","initialState","items","auth","PlanType","Address","state","action","console","log","type","payload"],"mappings":";;;;;;AAAA,SACEA,OADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEC,QALF,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,KAFa;AAGnBC,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,OAAO,EAAE,EAJU,CAKnB;AAEA;;AAPmB,CAArB;AAUA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACI,OAAnB;;AACA,UAAQJ,MAAM,CAACG,IAAf;AACE,SAAK,WAAL;AACE;AACA;AACA,+BACKJ,KADL;AAEEJ,QAAAA,KAAK,EAAEK,MAAM,CAACI;AAFhB;;AAIF,SAAKX,QAAL;AACE;AACA;AACA,+BACKM,KADL;AAEEJ,QAAAA,KAAK,EAAEK,MAAM,CAACI;AAFhB;;AAIF,SAAKb,SAAL;AACE,+BACKQ,KADL;AAEEF,QAAAA,QAAQ,EAAEG,MAAM,CAACI;AAFnB;;AAIF,SAAKZ,QAAL;AACE,+BACKO,KADL;AAEED,QAAAA,OAAO,oBAAOC,KAAK,CAACD,OAAb,MAAyBE,MAAM,CAACI,OAAhC;AAFT;;AAIF,SAAKf,OAAL;AACE,+BACKU,KADL;AAEED,QAAAA,OAAO,oBAAOC,KAAK,CAACD,OAAb,MAAyBE,MAAM,CAACI,OAAhC;AAFT;;AAIF;AACE,aAAOL,KAAP;AA/BJ;AAiCD","sourcesContent":["import {\r\n  Get_Add,\r\n  GET_ITEMS,\r\n  Post_Plan,\r\n  Post_Add,\r\n  Get_Food,\r\n} from \"../Actions/Types\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  auth: false,\r\n  PlanType: \"\",\r\n  Address: {},\r\n  // order:{\r\n\r\n  // }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  console.log(action.type);\r\n  console.log(action.payload);\r\n  switch (action.type) {\r\n    case \"GET_ITEMS\":\r\n      // console.log(action.payload._id);\r\n      //localStorage.setItem(\"item\", action.payload.item.items._id);\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n      };\r\n    case Get_Food:\r\n      // console.log(action.payload._id);\r\n      //localStorage.setItem(\"item\", action.payload.item.items._id);\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n      };\r\n    case Post_Plan:\r\n      return {\r\n        ...state,\r\n        PlanType: action.payload,\r\n      };\r\n    case Post_Add:\r\n      return {\r\n        ...state,\r\n        Address: { ...state.Address, ...action.payload },\r\n      };\r\n    case Get_Add:\r\n      return {\r\n        ...state,\r\n        Address: { ...state.Address, ...action.payload },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}