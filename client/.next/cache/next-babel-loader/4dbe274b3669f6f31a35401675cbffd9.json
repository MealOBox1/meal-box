{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Avatar, Row, Col, Menu, Radio, Badge, Switch, Modal } from \"antd\";\nimport Router from \"next/router\";\nimport UserLayout from \"./userlayout\";\nimport { Card, Input, Button } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Styles from \"../styles/food.module.css\";\nimport { connect, useSelector } from \"react-redux\";\nimport Link from \"next/link\";\nimport { getItems } from \"../Actions/ItemsAction\";\nimport { Orderfood, Createcart } from \"../Actions/OrderAction\";\nconst {\n  Meta\n} = Card;\n\nfunction Food(props) {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    meals: \"lunch\",\n    veg: \"true\"\n  });\n  const {\n    0: modalProps,\n    1: setmodalProps\n  } = useState({\n    loading: false,\n    visible: false\n  });\n  const {\n    0: value,\n    1: setvalue\n  } = useState(1);\n  const {\n    0: foodId,\n    1: setfoodId\n  } = useState({\n    id: \"\",\n    subscriptionDays: 1\n  });\n  const {\n    0: cart,\n    1: setcart\n  } = useState({\n    foodid: \"\",\n    days: 3\n  }); // const [List, setList] = useState(initialState)\n  // useEffect(() => {\n  //   const List = useSelector((state) => state);\n  //   console.log(List);\n  // });\n\n  const showModal = () => {\n    setmodalProps(prevState => _objectSpread({}, prevState, {\n      visible: true\n    }));\n    setfoodId(prevState => _objectSpread({}, prevState, {\n      id: props.menu[0]._id\n    }));\n    setcart(prevState => _objectSpread({}, prevState, {\n      foodid: props.menu[0]._id\n    }));\n  };\n\n  const List = useSelector(state => state.order.cart);\n\n  const handleOk = () => {\n    setmodalProps(prevState => _objectSpread({}, prevState, {\n      loading: true\n    }));\n    console.log(value);\n    props.Createcart(cart);\n    setTimeout(() => {\n      setmodalProps(prevState => _objectSpread({}, prevState, {\n        loading: false,\n        visible: false\n      }));\n      console.log(foodId); // props.Orderfood(foodId);\n\n      console.log(props.cart);\n      console.log(List); // Router.push(\"/[shipping]\", `/${List._id}`);\n    }, 4000);\n  };\n\n  const handleCancel = () => {\n    setmodalProps(prevState => _objectSpread({}, prevState, {\n      visible: false\n    }));\n  };\n\n  const handleChange = event => {\n    setState(prevState => _objectSpread({}, prevState, {\n      veg: event\n    }));\n    console.log(state);\n  };\n\n  const handlemeal = event => {\n    console.log(event.item.props.children[1].props.children);\n    setState(prevState => _objectSpread({}, prevState, {\n      meals: event.item.props.children[1].props.children\n    })); // getItems(state);\n  };\n\n  useEffect(() => {\n    console.log(state);\n    props.getItems(state);\n  }, [state]);\n\n  const onchange = e => {\n    console.log(e.target.value);\n    setvalue(e.target.value);\n    setfoodId(prevState => _objectSpread({}, prevState, {\n      subscriptionDays: value\n    }));\n    setcart(_objectSpread({}, cart, {\n      days: value\n    }));\n    console.log(value);\n  };\n\n  const selectedFood = event => {\n    console.log(event.target);\n  };\n\n  return __jsx(\"div\", null, __jsx(UserLayout, null, __jsx(Row, {\n    style: {\n      marginTop: \"75px\",\n      justifyContent: \"center\"\n    }\n  }, __jsx(\"div\", {\n    className: \"site-card-border-less-wrapper\"\n  }, __jsx(Card, {\n    style: {\n      borderLeft: \"3px solid #74cf4e\"\n    }\n  }, __jsx(\"h3\", null, \"All Meals\"), __jsx(Row, {\n    style: {\n      flexDirection: \"row\",\n      width: \"600px\",\n      alignItems: \"center\"\n    }\n  }, __jsx(Input, {\n    shape: \"round\",\n    style: {\n      width: \"250px\",\n      borderRadius: \"21px\"\n    },\n    placeholder: \"input search text\" //   enterButton=\"Search\"\n    ,\n    size: \"large\" //  onSearch={(value) => console.log(value)}\n\n  }), __jsx(Button, {\n    shape: \"round\",\n    style: {\n      marginLeft: \"46px\",\n      backgroundColor: \"#74cf4e\",\n      color: \"white\",\n      borderColor: \"#74cf4e\",\n      border: 0\n    },\n    icon: __jsx(SearchOutlined, null)\n  }, \"Search\"), __jsx(Switch, {\n    onClick: handleChange,\n    style: {\n      marginLeft: \" 80px\",\n      backgroundColor: \"#74cf4e\" // width: \" 77px\",\n\n    },\n    checkedChildren: \"veg\",\n    unCheckedChildren: \"Non-veg\",\n    defaultChecked: true\n  })), __jsx(Row, null, __jsx(Menu, {\n    mode: \"horizontal\",\n    theme: \"Light\" // style={{ boxShadow: \"1px 4px 6px #888888\", borderRadius: \" 30px\" }}\n    ,\n    defaultSelectedKeys: [\"2\"]\n  }, __jsx(Menu.Item, {\n    key: \"1\",\n    style: {\n      height: \"58px\"\n    },\n    onClick: handlemeal\n  }, __jsx(\"p\", null, \" Breakfast\")), __jsx(Menu.Item, {\n    key: \"2\",\n    style: {\n      height: \"58px\"\n    },\n    onClick: handlemeal\n  }, __jsx(\"p\", null, \"lunch\")), __jsx(Menu.Item, {\n    key: \"3\",\n    style: {\n      height: \"58px\"\n    },\n    onClick: handlemeal\n  }, __jsx(\"p\", null, \"dinner\")), __jsx(Menu.Item, {\n    key: \"4\",\n    style: {\n      height: \"58px\"\n    },\n    onClick: handlemeal\n  }, __jsx(\"p\", null, \"Snacks\")))), __jsx(Row, {\n    style: {\n      //  justifyContent: \"space-between\",\n      width: \"600px\",\n      flexFlow: \"row wrap\",\n      marginTop: \"10px\"\n    }\n  }, props.menu.map(el => // <Link href=\"/posts/[fid]\" as={`/posts/${el._id}`}>\n  __jsx(Card, {\n    onClick: showModal,\n    hoverable: true,\n    className: \"Styles.antCardBody\",\n    bodyStyle: {\n      padding: \"0\",\n      fontSize: \"9px\"\n    },\n    style: {\n      width: 117,\n      marginLeft: \"20px\"\n    },\n    cover: __jsx(\"img\", {\n      alt: \"example\",\n      src: \"./images/plate.jpg\"\n    }),\n    key: el._id\n  }, __jsx(\"p\", null, el.menu), __jsx(\"p\", null, \"Special 1 plate\")) // </Link>\n  ))))), __jsx(Modal, {\n    visible: modalProps.visible // title=\"Title\"\n    ,\n    style: {\n      padding: 0\n    },\n    bodyStyle: {\n      padding: 0\n    },\n    onOk: handleOk,\n    onCancel: handleCancel,\n    footer: [__jsx(Button, {\n      key: \"back\",\n      onClick: handleCancel\n    }, \"Return\"), __jsx(Button //   type=\"primary\"\n    , {\n      shape: \"round\" //icon={<DownloadOutlined />}\n      ,\n      size: \"large\",\n      style: {\n        // marginLeft: \"246px\",\n        marginTop: \"39px\",\n        backgroundColor: \"#74cf4e\",\n        color: \"white\"\n      },\n      value: \"Silver\",\n      id: \"silver\" //onClick={choosePlan}\n      ,\n      key: \"submit\",\n      type: \"primary\",\n      loading: modalProps.loading,\n      onClick: handleOk\n    }, \"Confirm\")]\n  }, __jsx(\"div\", {\n    style: {\n      width: \" 521px\",\n      height: \"121px\"\n    }\n  }, __jsx(\"img\", {\n    alt: \"example\",\n    src: \"./images/plate.jpg\",\n    style: {\n      height: \"inherit\",\n      width: \"520px\",\n      objectFit: \"cover\"\n    }\n  })), __jsx(Row, {\n    style: {\n      borderBottom: \"1px solid #dfdddd\"\n    }\n  }, __jsx(Col, {\n    span: 12,\n    style: {\n      borderRight: \"1px solid #dfdddd\",\n      padding: \"11px\"\n    }\n  }, __jsx(\"h3\", null, \"Roti,Daal & Rice\"), __jsx(\"p\", null, \"Special 1 Plate , 4 Roti\")), __jsx(Col, {\n    span: 12,\n    style: {\n      padding: \"11px\",\n      display: \"flex\",\n      flexDirection: \"row\"\n    }\n  }, __jsx(\"div\", null, __jsx(Avatar, {\n    src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n  })), __jsx(\"div\", {\n    style: {\n      marginLeft: \"20px\"\n    }\n  }, __jsx(\"h3\", null, \"Jone Doe\"), __jsx(\"p\", null, \"Krishn food\")))), __jsx(Row, {\n    style: {\n      flexDirection: \" column\",\n      marginTop: \"15px\"\n    }\n  }, __jsx(\"h3\", {\n    style: {\n      marginLeft: \"15px\"\n    }\n  }, \"Choose Subscription Plan\"), __jsx(\"div\", {\n    style: {\n      marginLeft: \"15px\"\n    }\n  }, __jsx(Radio.Group, {\n    onChange: onchange,\n    value: value\n  }, __jsx(Radio, {\n    className: Styles.radioStyle,\n    value: 3\n  }, \"3 Days Subscription Plan\"), value == 3 ? __jsx(Row, null, __jsx(\"p\", null, \"hi\")) : null, __jsx(Radio, {\n    className: Styles.radioStyle,\n    value: 6\n  }, \"6 Days Subscription Plan\"), __jsx(Radio, {\n    className: Styles.radioStyle,\n    value: 14\n  }, \"14 Days Subscription Plan\"), __jsx(Radio, {\n    className: Styles.radioStyle,\n    value: 28\n  }, \"28 Days Subscription Plan\")))))));\n}\n\nconst mapStateToProps = state => ({\n  menu: state.item.items,\n  cart: state\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  Orderfood,\n  Createcart\n})(Food);","map":null,"metadata":{},"sourceType":"module"}