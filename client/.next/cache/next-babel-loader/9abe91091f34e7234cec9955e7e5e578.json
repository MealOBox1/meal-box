{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GET_ITEMS } from \"../Actions/Types\";\nconst initialState = {\n  items: [],\n  loged\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return _objectSpread({}, state, {\n        items: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Acer/Desktop/nextjs-blog/reducers/itemReducer.js"],"names":["GET_ITEMS","initialState","items","loged","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA;AAFmB,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,SAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFhB;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD","sourcesContent":["import { GET_ITEMS } from \"../Actions/Types\";\r\n\r\nconst initialState = {\r\n  items: [] ,\r\n  loged\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}