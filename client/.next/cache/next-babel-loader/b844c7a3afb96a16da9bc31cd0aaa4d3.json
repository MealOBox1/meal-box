{"ast":null,"code":"var _jsxFileName = \"E:\\\\nextjs-blog\\\\client\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport \"../styles/global.css\";\nimport \"../styles/home.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faEnvelope, faKey } from \"@fortawesome/free-solid-svg-icons\";\nimport { Provider } from \"react-redux\";\nimport withRedux, { createWrapper } from \"next-redux-wrapper\";\nimport store from \"../store\";\nimport App from \"next/app\";\nlibrary.add(faEnvelope, faKey); // import \"../css/antd.less\";\n// import \"../styles/home.less\";\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}; //Anything returned here can be accessed by the client\n\n    return {\n      pageProps: pageProps\n    };\n  }\n\n  render() {\n    //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    })));\n  }\n\n} //makeStore function that returns a new store for every request\n\n\nconst makeStore = () => store;\n\nconst Wrapper = createWrapper(makeStore); //withRedux wrapper that passes the store to the App Component\n\nexport default Wrapper.withRedux(MyApp);","map":{"version":3,"sources":["E:/nextjs-blog/client/pages/_app.js"],"names":["React","Component","library","faEnvelope","faKey","Provider","withRedux","createWrapper","store","App","add","MyApp","getInitialProps","ctx","pageProps","render","props","makeStore","Wrapper"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,mCAAlC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,IAAoBC,aAApB,QAAyC,oBAAzC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACAP,OAAO,CAACQ,GAAR,CAAYP,UAAZ,EAAwBC,KAAxB,E,CACA;AACA;;AAEA,MAAMO,KAAN,SAAoBF,GAApB,CAAwB;AACtB,eAAaG,eAAb,CAA6B;AAAEX,IAAAA,SAAF;AAAaY,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,UAAMC,SAAS,GAAGb,SAAS,CAACW,eAAV,GACd,MAAMX,SAAS,CAACW,eAAV,CAA0BC,GAA1B,CADQ,GAEd,EAFJ,CAD+C,CAK/C;;AACA,WAAO;AAAEC,MAAAA,SAAS,EAAEA;AAAb,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEd,MAAAA,SAAF;AAAaa,MAAAA;AAAb,QAA2B,KAAKE,KAAtC;AAEA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AAnBqB,C,CAsBxB;;;AACA,MAAMG,SAAS,GAAG,MAAMT,KAAxB;;AACA,MAAMU,OAAO,GAAGX,aAAa,CAACU,SAAD,CAA7B,C,CAEA;;AACA,eAAeC,OAAO,CAACZ,SAAR,CAAkBK,KAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../styles/global.css\";\r\nimport \"../styles/home.css\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faEnvelope, faKey } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Provider } from \"react-redux\";\r\nimport withRedux, { createWrapper } from \"next-redux-wrapper\";\r\nimport store from \"../store\";\r\nimport App from \"next/app\";\r\nlibrary.add(faEnvelope, faKey);\r\n// import \"../css/antd.less\";\r\n// import \"../styles/home.less\";\r\n\r\nclass MyApp extends App {\r\n  static async getInitialProps({ Component, ctx }) {\r\n    const pageProps = Component.getInitialProps\r\n      ? await Component.getInitialProps(ctx)\r\n      : {};\r\n\r\n    //Anything returned here can be accessed by the client\r\n    return { pageProps: pageProps };\r\n  }\r\n\r\n  render() {\r\n    //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\r\n    const { Component, pageProps } = this.props;\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Component {...pageProps} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n//makeStore function that returns a new store for every request\r\nconst makeStore = () => store;\r\nconst Wrapper = createWrapper(makeStore);\r\n\r\n//withRedux wrapper that passes the store to the App Component\r\nexport default Wrapper.withRedux(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}