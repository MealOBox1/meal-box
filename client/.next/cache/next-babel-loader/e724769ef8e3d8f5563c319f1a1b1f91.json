{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Order_Food } from \"./Types\";\nconst initialState = {\n  order: {\n    deliveryAddress: {},\n    subscriptionDays: 0,\n    ordered: false,\n    cart: false\n  }\n};\nexport default function (state = initialState, action) {\n  console.log(action.type);\n  console.log(action.payload);\n\n  switch (action.type) {\n    case Order_Food:\n      // console.log(action.payload._id);\n      //localStorage.setItem(\"item\", action.payload.item.items._id);\n      return _objectSpread({}, state, {\n        order: _objectSpread({}, state.order, {}, action.payload)\n      });\n  }\n}","map":{"version":3,"sources":["E:/nextjs-blog/client/reducers/orderReducer.js"],"names":["Order_Food","initialState","order","deliveryAddress","subscriptionDays","ordered","cart","state","action","console","log","type","payload"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,SAA3B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAE,EADZ;AAELC,IAAAA,gBAAgB,EAAE,CAFb;AAGLC,IAAAA,OAAO,EAAE,KAHJ;AAILC,IAAAA,IAAI,EAAE;AAJD;AADY,CAArB;AASA,eAAe,UAAUC,KAAK,GAAGN,YAAlB,EAAgCO,MAAhC,EAAwC;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACI,OAAnB;;AACA,UAAQJ,MAAM,CAACG,IAAf;AACE,SAAKX,UAAL;AACE;AACA;AACA,+BACKO,KADL;AAEEL,QAAAA,KAAK,oBAAOK,KAAK,CAACL,KAAb,MAAuBM,MAAM,CAACI,OAA9B;AAFP;AAJJ;AASD","sourcesContent":["import { Order_Food } from \"./Types\";\r\n\r\nconst initialState = {\r\n  order: {\r\n    deliveryAddress: {},\r\n    subscriptionDays: 0,\r\n    ordered: false,\r\n    cart: false,\r\n  },\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  console.log(action.type);\r\n  console.log(action.payload);\r\n  switch (action.type) {\r\n    case Order_Food:\r\n      // console.log(action.payload._id);\r\n      //localStorage.setItem(\"item\", action.payload.item.items._id);\r\n      return {\r\n        ...state,\r\n        order: { ...state.order, ...action.payload },\r\n      };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}