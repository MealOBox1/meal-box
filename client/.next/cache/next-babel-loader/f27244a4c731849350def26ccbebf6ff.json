{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Input, InputNumber, Button, Select } from \"antd\";\nimport style from \"../styles/ContactUs.module.css\";\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst validateMessages = {\n  required: \"${label} is required!\",\n  types: {\n    email: \"${label} is not validate email!\",\n    number: \"${label} is not a validate number!\"\n  },\n  number: {\n    range: \"${label} must be between ${min} and ${max}\"\n  }\n};\n\nconst prefixSelector = __jsx(Form.Item, {\n  name: \"prefix\",\n  noStyle: true\n}, __jsx(Select, {\n  style: {\n    width: \"70px\"\n  }\n}, __jsx(Option, {\n  value: \"86\"\n}, \"+86\"), __jsx(Option, {\n  value: \"87\"\n}, \"+87\"), __jsx(Option, {\n  value: \"87\"\n}, \"+91\")));\n\nconst Demo = () => {\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  return __jsx(Form, _extends({\n    className: style.form\n  }, layout, {\n    name: \"nest-messages\",\n    onFinish: onFinish,\n    validateMessages: validateMessages\n  }), __jsx(Form.Item, {\n    name: [\"user\", \"name\"],\n    label: \"Name\",\n    rules: [{\n      required: true\n    }]\n  }, __jsx(Input, {\n    placeholder: \"Name\"\n  })), __jsx(Form.Item, {\n    name: \"phone\",\n    label: \"Phone Number\",\n    rules: [{\n      required: true,\n      message: \"Please input your phone number!\"\n    }]\n  }, __jsx(Input, {\n    addonBefore: prefixSelector,\n    style: {\n      width: \"100%\"\n    }\n  })), __jsx(Form.Item, {\n    name: [\"user\", \"introduction\"],\n    label: \"Introduction\"\n  }, __jsx(Input.TextArea, null)), __jsx(Form.Item, {\n    wrapperCol: _objectSpread({}, layout.wrapperCol, {\n      offset: 8\n    })\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Submit\")));\n};\n\nexport default Demo;","map":null,"metadata":{},"sourceType":"module"}